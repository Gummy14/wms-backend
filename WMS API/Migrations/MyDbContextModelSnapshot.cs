// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMS_API.DbContexts;

#nullable disable

namespace WMS_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WMS_API.Models.Events.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_EventTypes");

                    b.ToTable("EventTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 110,
                            EventTypeDescription = "Container Registered"
                        },
                        new
                        {
                            Id = 111,
                            EventTypeDescription = "Container Declared Full"
                        },
                        new
                        {
                            Id = 210,
                            EventTypeDescription = "Item Registered, Waiting To Be Selected For Putaway"
                        },
                        new
                        {
                            Id = 220,
                            EventTypeDescription = "Item Selected For Putaway, Putaway In Progress"
                        },
                        new
                        {
                            Id = 310,
                            EventTypeDescription = "Item Putaway Into Container Complete"
                        },
                        new
                        {
                            Id = 410,
                            EventTypeDescription = "Order Registered, Waiting To Be Selected For Picking"
                        },
                        new
                        {
                            Id = 411,
                            EventTypeDescription = "Item Added To Order"
                        },
                        new
                        {
                            Id = 420,
                            EventTypeDescription = "Order Selected For Picking, Picking In Progress"
                        },
                        new
                        {
                            Id = 421,
                            EventTypeDescription = "Container Selected For Picking"
                        },
                        new
                        {
                            Id = 422,
                            EventTypeDescription = "Item Pick From Container Before"
                        },
                        new
                        {
                            Id = 423,
                            EventTypeDescription = "Item Pick From Container After"
                        },
                        new
                        {
                            Id = 510,
                            EventTypeDescription = "Order Picking Completed, Waiting Be To Selected For Packaging"
                        },
                        new
                        {
                            Id = 520,
                            EventTypeDescription = "Order Selected For Packaging, Packaging In Progress"
                        },
                        new
                        {
                            Id = 610,
                            EventTypeDescription = "Order Packaging Completed, Waiting To Be Selected For Shipping"
                        },
                        new
                        {
                            Id = 620,
                            EventTypeDescription = "Order Selected For Shipping, Shipping Preparation In Progress"
                        },
                        new
                        {
                            Id = 710,
                            EventTypeDescription = "Order Shipped"
                        });
                });

            modelBuilder.Entity("WMS_API.Models.WarehouseObjects.WarehouseObject", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("NextEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<Guid>("PreviousEventId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EventId")
                        .HasName("PK_WarehouseObjects");

                    b.ToTable("WarehouseObjects", (string)null);
                });

            modelBuilder.Entity("WMS_API.Models.WarehouseObjects.WarehouseObjectRelationship", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("NextEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PreviousEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RelationshipId")
                        .HasColumnType("char(36)");

                    b.HasKey("EventId")
                        .HasName("PK_WarehouseObjectRelationships");

                    b.ToTable("WarehouseObjectRelationships", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
