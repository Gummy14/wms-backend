// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WMS_API.DbContexts;

#nullable disable

namespace WMS_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241102161111_RefactoringItemOrderRelationship")]
    partial class RefactoringItemOrderRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WMS_API.Models.Containers.Container", b =>
                {
                    b.Property<Guid>("ContainerEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemEventId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("NextContainerEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PreviousContainerEventId")
                        .HasColumnType("char(36)");

                    b.HasKey("ContainerEventId")
                        .HasName("PK_Containers");

                    b.ToTable("Containers", (string)null);
                });

            modelBuilder.Entity("WMS_API.Models.Events.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_EventTypes");

                    b.ToTable("EventTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventTypeDescription = "Registered"
                        },
                        new
                        {
                            Id = 2,
                            EventTypeDescription = "Putaway"
                        },
                        new
                        {
                            Id = 3,
                            EventTypeDescription = "Added To Order"
                        },
                        new
                        {
                            Id = 4,
                            EventTypeDescription = "Picked"
                        },
                        new
                        {
                            Id = 5,
                            EventTypeDescription = "Order Created"
                        });
                });

            modelBuilder.Entity("WMS_API.Models.Items.Item", b =>
                {
                    b.Property<Guid>("ItemEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContainerEventId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("NextItemEventId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PreviousItemEventId")
                        .HasColumnType("char(36)");

                    b.HasKey("ItemEventId")
                        .HasName("PK_Items");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("WMS_API.Models.Orders.Order", b =>
                {
                    b.Property<Guid>("OrderEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<Guid>("NextOrderEventId")
                        .HasColumnType("char(36)");

                    b.Property<int>("NumberOfItemsPickedForOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PreviousOrderEventId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TotalNumberOfItemsInOrder")
                        .HasColumnType("int");

                    b.HasKey("OrderEventId")
                        .HasName("PK_Orders");

                    b.ToTable("Orders", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
